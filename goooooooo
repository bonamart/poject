function deserializeFromJSON(data) {
    try {
        if (typeof data === 'string' && data.trim() !== '') {
            // Check if the string is already valid JSON
            if (data.startsWith('{') || data.startsWith('[')) {
                return JSON.parse(data);
            } else {
                // If it's a plain string, wrap it in an array or object
                return [data]; // or return { value: data };
            }
        } else if (Array.isArray(data)) {
            return data; // Already an array, no need to parse
        } else if (data && typeof data === 'object') {
            return data; // Already an object, no need to parse
        } else {
            console.warn('Invalid data format:', data);
            return []; // Default to an empty array
        }
    } catch (error) {
        console.error('Failed to parse data:', error);
        return []; // Default to an empty array
    }
}
==
onAppointmentFormOpening: function(e) {
    const form = e.form;
    const appointmentData = e.appointmentData;

    console.log('Appointment Data:', appointmentData); // Debug log

    // Handle employee_id
    if (!appointmentData.employee_id) {
        appointmentData.employee_id = []; // Default to empty array if null
    } else if (typeof appointmentData.employee_id === 'string') {
        appointmentData.employee_id = deserializeFromJSON(appointmentData.employee_id);
    }

    // Handle guest
    if (!appointmentData.guest) {
        appointmentData.guest = []; // Default to empty array if null
    } else if (typeof appointmentData.guest === 'string') {
        appointmentData.guest = deserializeFromJSON(appointmentData.guest);
    }

    // Handle family
    if (!appointmentData.family) {
        appointmentData.family = []; // Default to empty array if null
    } else if (typeof appointmentData.family === 'string') {
        appointmentData.family = deserializeFromJSON(appointmentData.family);
    }

    // Rest of your code...
}
