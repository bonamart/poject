Swal.fire({
    title: 'What do you want to do?',
    text: 'Choose an option for this booking',
    icon: 'question',
    showCancelButton: true,
    confirmButtonText: 'Submit Now',
    cancelButtonText: 'Save as Draft',
    reverseButtons: true
}).then((result) => {
    console.log("Swal result:", result);
    let requestStatus = result.isConfirmed ? 1 : 0;
    
    return sendRequest(apiurl + "/" + modname, "POST", {
        requestStatus: requestStatus,
        text: appointmentData.text,
        description: appointmentData.description,
        startDate: appointmentData.startDate,
        endDate: appointmentData.endDate,
        ghm_room_id: appointmentData.ghm_room_id,
        employee_id: appointmentData.employee_id,
        guest: appointmentData.guest,
        family: appointmentData.family
    }).then((response) => {
        console.log("Response from first request:", response);
        let reqid = response.data.id;
        console.log("Received reqid:", reqid);

        if (result.isConfirmed) {
            console.log("Sending second request with reqid:", reqid);
            return sendRequest(apiurl + "/submissionrequest/" + reqid + "/" + modelclass, "POST", {
                requestStatus: 1,
                action: actionForm,
                approvalAction: isNaN(parseInt(valapprovalAction)) ? 1 : parseInt(valapprovalAction),
                approvalType: valApprovalType,
            });
        } else {
            return null;
        }
    }).then((response) => {
        if (response) {
            console.log("Response from second request:", response);
            if (response.status === 'success') {
                e.component._dataSource.reload();
            }
        }

        Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: `Booking has been ${result.isConfirmed ? "submitted" : "saved as draft"}.`,
            timer: 2000,
            showConfirmButton: false
        });
    }).catch((error) => {
        console.error("Error occurred:", error);
        Swal.fire({ icon: 'error', title: 'Error', text: error.responseText || 'An error occurred' });
    });
});
