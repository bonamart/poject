$(() => {
  $('.scheduler').dxScheduler({
    timeZone: 'America/Los_Angeles',
    dataSource: data,
    views: ['month'],
    currentView: 'month',
    currentDate: new Date(2021, 5, 2, 11, 30),
    firstDayOfWeek: 1,
    startDayHour: 8,
    endDayHour: 18,
    showAllDayPanel: false,
    height: 710,
    groups: ['employeeID'],
    resources: [
      {
        fieldExpr: 'employeeID',
        allowMultiple: false,
        dataSource: employees,
        label: 'Employee',
      },
    ],
    dataCellTemplate(cellData, index, container) {
      const { employeeID } = cellData.groups;
      const currentTraining = getCurrentTraining(cellData.startDate.getDate(), employeeID);

      const wrapper = $('<div>')
        .toggleClass(`employee-weekend-${employeeID}`, isWeekEnd(cellData.startDate)).appendTo(container)
        .addClass(`employee-${employeeID}`)
        .addClass('dx-template-wrapper');

      wrapper.append($('<div>')
        .text(cellData.text)
        .addClass(currentTraining)
        .addClass('day-cell'));
    },
    resourceCellTemplate(cellData) {
      const name = $('<div>')
        .addClass('name')
        .css({ backgroundColor: cellData.color })
        .append($('<h2>')
          .text(cellData.text));

      const avatar = $('<div>')
        .addClass('avatar')
        .html(`<img src=${cellData.data.avatar} alt="${cellData.text} photo">`)
        .attr('title', cellData.text);

      const info = $('<div>')
        .addClass('info')
        .css({ color: cellData.color })
        .html(`Age: ${cellData.data.age}<br/><b>${cellData.data.discipline}</b>`);

      return $('<div>').append([name, avatar, info]);
    },
    onAppointmentFormOpening(e) {
      const popup = e.popup;
      let toolbarItems = popup.option('toolbarItems');

      // Cari tombol Done dan modifikasi
      const doneButton = toolbarItems.find(item => item.options && item.options.text === 'Done');
      if (doneButton) {
        doneButton.options.onClick = function () {
          Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to proceed?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
          }).then((result) => {
            if (result.isConfirmed) {
              // Tambahkan tombol Save as Draft dan Submit setelah Done ditekan
              popup.option('toolbarItems', [
                ...toolbarItems,
                {
                  widget: 'dxButton',
                  options: {
                    text: 'Save as Draft',
                    onClick: function () {
                      Swal.fire({
                        icon: 'success',
                        title: 'Saved as Draft',
                        text: 'Appointment has been saved as draft.',
                      });
                    }
                  },
                  location: 'after'
                },
                {
                  widget: 'dxButton',
                  options: {
                    text: 'Submit',
                    onClick: function () {
                      Swal.fire({
                        title: 'Are you sure?',
                        text: 'Are you sure you want to submit this appointment?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, submit it!'
                      }).then((result) => {
                        if (result.isConfirmed) {
                          e.component.addAppointment(e.appointmentData);
                          Swal.fire({
                            icon: 'success',
                            title: 'Submitted',
                            text: 'Appointment successfully submitted!',
                          });
                        }
                      });
                    }
                  },
                  location: 'after'
                }
              ]);
            }
          });
        };
      }

      popup.option('toolbarItems', toolbarItems);
    },
    onAppointmentAdding: function(e) {
      e.cancel = true; // Mencegah penambahan otomatis sebelum konfirmasi
    }
  });

  function isWeekEnd(date) {
    const day = date.getDay();
    return day === 0 || day === 6;
  }

  function getCurrentTraining(date, employeeID) {
    const result = (date + employeeID) % 3;
    const currentTraining = `training-background-${result}`;
    return currentTraining;
  }
});
