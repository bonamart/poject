🛠 Cara Memperbaiki
1️⃣ Update Fungsi getTotalGuestsForDateLocally agar Memeriksa Rentang Tanggal
🔹 Gunakan startDate dan endDate untuk mengecek apakah startDate yang dicek berada dalam rentang booking.
🔹 Jika booking mencakup beberapa hari, maka tamu tetap dihitung di setiap harinya.

js
Copy
Edit
function getTotalGuestsForDateLocally(scheduler, roomId, checkDate) {
    let appointments = scheduler.getDataSource().items(); // Ambil semua booking yang ada
    let totalGuests = 0;
    
    console.log(`📆 Mencari booking di kamar ${roomId} untuk tanggal ${checkDate}`);

    appointments.forEach(appointment => {
        let start = new Date(appointment.startDate);
        let end = new Date(appointment.endDate);
        let check = new Date(checkDate);

        console.log(`🕒 Booking Room ID: ${appointment.ghm_room_id}, Start: ${start}, End: ${end}`);

        // Cek apakah checkDate berada dalam rentang startDate - endDate
        if (appointment.ghm_room_id === roomId && check >= start && check <= end) {
            let guestCount = safeArray(appointment.guest).length;
            let familyCount = safeArray(appointment.family).length;
            let employeeCount = safeArray(appointment.employee_id).length;

            console.log(`✔️ Ditemukan booking dalam rentang tanggal: Guest=${guestCount}, Family=${familyCount}, Employee=${employeeCount}`);

            totalGuests += guestCount + familyCount + employeeCount;
        }
    });

    console.log(`✅ Total tamu di kamar ${roomId} pada ${checkDate}: ${totalGuests}`);
    return totalGuests;
}
2️⃣ Penyesuaian di onAppointmentAdding
🔹 Saat pengguna mencoba menambahkan booking baru, kita perlu memeriksa apakah total tamu pada setiap hari dalam rentang startDate hingga endDate tetap sesuai kapasitas.
🔹 Gunakan loop untuk mengecek setiap hari dalam rentang booking.

js
Copy
Edit
onAppointmentAdding: function(e) {
    const appointmentData = e.appointmentData;
    let scheduler = e.component;

    let guestCount = safeArray(appointmentData.guest).length;
    let familyCount = safeArray(appointmentData.family).length;
    let employeeCount = safeArray(appointmentData.employee_id).length;
    let totalNewGuests = guestCount + familyCount + employeeCount;

    let selectedRoom = appointmentData.ghm_room_id;
    let roomCapacity = roomsWithLocations.find(room => room.id === selectedRoom)?.roomAccupancy || 0;

    let startDate = new Date(appointmentData.startDate);
    let endDate = new Date(appointmentData.endDate);
    
    console.log(`🔍 Mengecek kapasitas kamar dari ${startDate.toDateString()} sampai ${endDate.toDateString()}`);

    let isOverCapacity = false;
    
    for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
        let currentGuests = getTotalGuestsForDateLocally(scheduler, selectedRoom, d);
        let totalGuestsAfterAdding = currentGuests + totalNewGuests;

        console.log(`📅 ${d.toDateString()} → ${totalGuestsAfterAdding}/${roomCapacity} tamu`);

        if (totalGuestsAfterAdding > roomCapacity) {
            isOverCapacity = true;
            break;
        }
    }

    if (isOverCapacity) {
        e.cancel = true; // Batalkan booking
        DevExpress.ui.notify(`Kapasitas kamar penuh dalam rentang tanggal!`, "error", 3000);
        return;
    }

    // Jika kapasitas aman, lanjutkan request
    appointmentData.guest = serializeToJSON(appointmentData.guest);
    appointmentData.family = serializeToJSON(appointmentData.family);

    sendRequest(apiurl + "/" + modname, "POST", {
        requestStatus: 0,
        text: appointmentData.text,
        description: appointmentData.description,
        startDate: appointmentData.startDate,
        endDate: appointmentData.endDate,
        ghm_room_id: appointmentData.ghm_room_id,
        employee_id: appointmentData.employee_id,
        guest: appointmentData.guest,
        family: appointmentData.family
    }).then(function(response) {
        if (response.status === 'success') {
            e.component._dataSource.reload();
            DevExpress.ui.notify("Booking berhasil dibuat!", "success", 2000);
        } else {
            DevExpress.ui.notify("Error: " + response.message, "error", 3000);
        }
    }).catch(function(error) {
        DevExpress.ui.notify("Error: " + error.responseText, "error", 3000);
    });
}
🚀 Kesimpulan
✔️ Dengan update ini: 1️⃣ getTotalGuestsForDateLocally sekarang mengecek tamu dalam rentang tanggal booking.
2️⃣ Sebelum menambahkan booking baru, sistem akan mengecek kapasitas kamar di setiap hari dalam rentang tersebut.
3️⃣ Jika ada hari yang melebihi kapasitas, booking akan dibatalkan.

🔹 Coba jalankan dan lihat apakah log di console menunjukkan jumlah tamu per hari yang benar! 🚀
