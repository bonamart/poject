public function dashboard()
{
    $user = auth()->user();
    $userId = $user->id;
    $isAdmin = $user->isAdmin ?? false;
    $employeeId = $user->employee_id ?? null;

    // Logika hak akses sama dengan index
    $requests = Ghm::query()
        ->where(function ($query) use ($userId, $isAdmin, $employeeId) {
            if ($isAdmin) {
                // Admin bisa melihat semua request kecuali miliknya sendiri
                $query->where("request_ghm.user_id", "!=", $userId)
                    ->whereIn("request_ghm.requestStatus", [0, 1, 3, 4]);
            } else {
                // Non-admin hanya bisa melihat request yang ditugaskan ke mereka
                $query->where("tbl_assignment.employee_id", $employeeId)
                    ->whereIn("request_ghm.requestStatus", [3]);
            }
        })
        ->orWhere("request_ghm.user_id", $userId) // Semua user bisa melihat request mereka sendiri
        ->with(['User', 'code', 'ghm_room'])
        ->get();

    // Sisanya tetap sama...
    $rooms = Ghm_room::all();
    $locations = Location::all();
    $employees = Employee::with('Department')->get();
    $departments = Department::all();

    $emploMapped = $employees->map(function ($emp) {
        return [
            'id' => $emp->id,
            'FullName' => $emp->FullName,
            'SAPID' => $emp->SAPID,
            'department_id' => $emp->department_id,
        ];
    });

    $departmentsMapped = $departments->map(function ($dept) {
        return [
            'id' => $dept->id,
            'DepartmentName' => $dept->DepartmentName,
        ];
    });

    $totalPeopleData = DB::table('request_ghm')
        ->selectRaw('id, COALESCE(SUM(employee_count), 0) as totalEmployee,
                     COALESCE(SUM(guest_count), 0) as totalGuest,
                     COALESCE(SUM(family_count), 0) as totalFamily,
                     COALESCE(SUM(employee_count + guest_count + family_count), 0) as totalAll')
        ->groupBy('id')
        ->get();

    $totalPeopleArray = $totalPeopleData->mapWithKeys(function ($item) {
        return [$item->id => $item->totalAll];
    });

    $booking = $requests->map(function ($request) use ($rooms, $locations, $totalPeopleArray) {
        $room = $rooms->firstWhere('id', $request->ghm_room_id);
        $location = $room ? $locations->firstWhere('id', $room->location_id) : null;
        $totalPeople = $totalPeopleArray[$request->id] ?? 0;

        return [
            'id' => $request->id,
            'text' => $request->text ?? '',
            'guest' => $request->guest ?? 0,
            'family' => $request->family ?? 0,
            'employee_id' => $request->employee_id ?? null,
            'ticketstatus' => $request->ticketStatus ?? null,
            'completeddate' => $request->completeddate ?? null,
            'confirmationStatus' => $request->confirmationStatus ?? null,
            'description' => $request->description ?? '',
            'requestStatus' => $request->requestStatus ?? 0,
            'startDate' => optional($request->startDate)->toIso8601String(),
            'endDate' => optional($request->endDate)->toIso8601String(),
            'code' => optional($request->code)->code ?? null,
            'creator' => optional($request->User)->fullname ?? null,
            'ghm_room_id' => $request->ghm_room_id,
            'roomName' => $room->roomName ?? null,
            'location' => $location->Location ?? null,
            'totalPeople' => $totalPeople,
        ];
    });

    $roomsWithLocations = $rooms->map(function ($room) use ($locations) {
        $location = $locations->firstWhere('id', $room->location_id);
        return [
            'text' => $room->roomName,
            'id' => $room->id,
            'roomAccupancy' => $room->roomAccupancy ?? 0,
            'location' => $location ? $location->Location : null,
            'color' => '#' . substr(md5($room->roomName), 0, 6),
        ];
    });

    $uniqueLocations = $roomsWithLocations->pluck('location')->unique()->values();

    return view('dashboard.ghm_booking', [
        'booking' => $booking,
        'roomsWithLocations' => $roomsWithLocations,
        'uniqueLocations' => $uniqueLocations,
        'emplo' => $emploMapped,
        'departments' => $departmentsMapped,
    ]);
}
